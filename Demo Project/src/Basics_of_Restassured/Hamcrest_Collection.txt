Hamcrest: - 
-> Hamcrest is a well-known assertion library used for unit testing along with JUnit.
-> Hamcrest can be used along with Rest Assured for assertions.
-> Uses matcher classes for making assertions
Advantages : -
-> Human readable and in plain English
-> Code is neat and intuitive
-> Provides thin methods like "is" and "not", also called decorators, for more readability

Hamcrest Vs TestNG
-> Readability
-> Descriptive error messages (Hamcrest automatically provides readable error messages without writing any extra code but TestNg doesnot )
-> Type Safety (During execution we will get an error if two different datatypes are matched but it doesnot happen in TestNG)

Collection matches (List, Array, Map, etc.)
==============================================
hasItem() -> check single element in a collection
not(hasItem()) -> check single element is NOT in a collection
hasItems() -> Check all elements are in a collection. It doesnot do strict checking like if in response 5 elements are present and we had given only 2 elements out of 5 then also it passes.
contains() -> Check all elements are in a collection and in a strict order. If 5 elements are present in response then all 5 should be present in expected result in proper order.
containsInAnyOrder() -> Check all elements are in a collection and in any order
empty() -> Check if collection is empty
not(emptyArray()) -> Check if the Array is not empty
hasSize() -> Check size of a collection
everyItem(startsWith()) -> Check if every item in a collection starts with specified string

hasKey() -> Map -> Check if Map has the specified key [value is not checked]
hasValue() -> Map -> Check if Map has at least one key matching specified value
hasEntry() -> Maps -> Check if Map has the specified key value pair
equalTo(Collections.EMPTY_MAP) -> Maps [Check if empty]
allOf() -> Matches if all matchers matches
anyOf() -> Matches if any of the matchers matches
Numbers:
greaterThanOrEqualTo()
lessThan()
lessThanOrEqualTo()
String:
containsString()
emptyString()
